name: Deploy Action

on: [workflow_dispatch]

env:
  REGISTRY: ghcr.io

jobs:
  # 1 compile app
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build all modules
        run: ./gradlew clean build -x test
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GH_TOKEN }}" | docker login ${{ env.REGISTRY }} -u "${{ secrets.GH_USERNAME }}" --password-stdin

      - name: Build auth-service image
        run: | 
          docker build -f auth-service/Dockerfile -t ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/auth-service auth-service/
          docker push ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/auth-service

      - name: Build database-service image
        run: | 
          docker build -f database-service/Dockerfile -t ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/database-service database-service/
          docker push ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/database-service

      - name: Build feed-service image
        run: | 
          docker build -f feed-service/Dockerfile -t ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/feed-service feed-service/
          docker push ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/feed-service

      - name: Build gateway-service image
        run: | 
          docker build -f gateway-service/Dockerfile -t ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/gateway-service gateway-service/
          docker push ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/gateway-service

      - name: Build profile-service image
        run: |
          docker build -f profile-service/Dockerfile -t ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/profile-service profile-service/
          docker push ${{ env.REGISTRY }}/${{ secrets.GH_USERNAME }}/profile-service
  
  # 2 start application
  start:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      
      - name: Transfer docker-compose.yaml
        run: scp docker-compose.yaml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:mikhail_poizon/web/ 

      - name: Stop docker compose
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd mikhail_poizon/web/ && docker compose down"

      - name: Start docker compose
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd mikhail_poizon/web/ && \
          export EMAIL=${{ secrets.EMAIL }} && \
          export DOMAIN=${{ secrets.DOMAIN }} && \
          export SERVICE_JWT_TOKEN=${{ secrets.SERVICE_JWT_TOKEN }} && \
          export SECRET_JWT_TOKEN=${{ secrets.SECRET_JWT_TOKEN }} && \
          docker compose up -d --pull always"
      